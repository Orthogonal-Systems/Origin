#!/usr/bin/env python

import sys
import os
fullBinPath=os.path.abspath(os.getcwd() + "/" + sys.argv[0])
fullLibPath=os.path.abspath(os.path.dirname(os.path.dirname(fullBinPath))+"/lib")
sys.path.append(fullLibPath)
import time

import random
import calendar
import time
import sys

import origin
if len(sys.argv) > 1:
  configBundle = sys.argv[1]
  origin.configure(configBundle)
else:
  origin.configure("site")


from origin.client import float_field
from origin.client import integer_field
from origin.client import string_field
from origin.client import monitoring_record
from origin.client import server
from origin.client import server_connection
from origin.client import current_time

# just a proxy for actually doing something useful
def makeTempMeasurement():
    return random.random()

# something that represents the connection to the server
# might need arguments.... idk
serv = server()


# alert the server that we are going to be sending this type of data
connection = serv.registerStream(
    stream="toy",
    records={
        "toy1":float_field,
        "toy2":float_field,
        })

# perhaps print some useful message. Perhaps try to reconnect....
# print "problem establishing connection to server..."
# sys.exit(1)


# This might need to be more complicated, but you get the gist. Keep sending records forever    
time.sleep(5)

while True:
    print "sending...."
    connection.send(recordTime=current_time(),toy1=makeTempMeasurement(),toy2=makeTempMeasurement())
    time.sleep(5)




